{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from '../base';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      //1. Take a copy of existing state\n      var fishes = _objectSpread({}, _this.state.fishes); //2. Add our new fish to that fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; //3. Set the new fishes object to state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.updateFish = function (key, updatedFish) {\n      //1. take copy of current state\n      var fishes = _objectSpread({}, _this.state.fishes); //2/update stage\n\n\n      fishes[key] = updatedFish; //3. set that to state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.deleteFish = function (key) {\n      //1.Take a copy of state\n      var fishes = _objectSpread({}, _this.state.fishes); //2.Update the state\n\n\n      fishes[key] = null; //3.update the state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      //1. take copy of state\n      var order = _objectSpread({}, _this.state.order); //2. either add to order or update the number in our order\n\n\n      order[key] = order[key] + 1 || 1; //3.. call setstate to update our state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.removeFromOrder = function (key) {\n      //1. take copy of state\n      var order = _objectSpread({}, _this.state.order); //2. remove that item from our order\n\n\n      delete order[key]; //3.. call setstate to update our state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params; //fisreinstate our local storage\n\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: 'fishes'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(this.state.order);\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }))), React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        removeFromOrder: this.removeFromOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Inventory, {\n        addFish: this.addFish,\n        updateFish: this.updateFish,\n        deleteFish: this.deleteFish,\n        loadSampleFishes: this.loadSampleFishes,\n        fishes: this.state.fishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dinas/OneDrive/Documents/Elsa/Coding/REACT/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","console","log","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE;AAFH,K;;UA0BRC,O,GAAU,UAAAC,IAAI,EAAI;AACd;AACA,UAAMH,MAAM,qBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAZ,CAFc,CAGd;;;AACAA,MAAAA,MAAM,eAAQI,IAAI,CAACC,GAAL,EAAR,EAAN,GAA8BF,IAA9B,CAJc,CAKd;;AACA,YAAKG,QAAL,CAAc;AACVN,QAAAA,MAAM,EAAEA;AADE,OAAd;AAGH,K;;UAEDO,U,GAAa,UAACC,GAAD,EAAMC,WAAN,EAAsB;AAC/B;AACA,UAAMT,MAAM,qBAAQ,MAAKD,KAAL,CAAWC,MAAnB,CAAZ,CAF+B,CAG/B;;;AACAA,MAAAA,MAAM,CAACQ,GAAD,CAAN,GAAcC,WAAd,CAJ+B,CAK/B;;AACA,YAAKH,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAANA;AAAF,OAAd;AACH,K;;UAEDU,U,GAAa,UAAAF,GAAG,EAAI;AAChB;AACA,UAAMR,MAAM,qBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAZ,CAFgB,CAGhB;;;AACAA,MAAAA,MAAM,CAACQ,GAAD,CAAN,GAAc,IAAd,CAJgB,CAKhB;;AACA,YAAKF,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAANA;AAAF,OAAd;AACH,K;;UAEDW,gB,GAAmB,YAAM;AACrB,YAAKL,QAAL,CAAc;AAACN,QAAAA,MAAM,EAACL;AAAR,OAAd;AACH,K;;UAEDiB,U,GAAa,UAAAJ,GAAG,EAAI;AAChB;AACA,UAAMP,KAAK,qBAAO,MAAKF,KAAL,CAAWE,KAAlB,CAAX,CAFgB,CAGhB;;;AACAA,MAAAA,KAAK,CAACO,GAAD,CAAL,GAAaP,KAAK,CAACO,GAAD,CAAL,GAAa,CAAb,IAAkB,CAA/B,CAJgB,CAKhB;;AACA,YAAKF,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACH,K;;UACDY,e,GAAkB,UAAAL,GAAG,EAAI;AACnB;AACA,UAAMP,KAAK,qBAAO,MAAKF,KAAL,CAAWE,KAAlB,CAAX,CAFmB,CAGnB;;;AACA,aAAOA,KAAK,CAACO,GAAD,CAAZ,CAJmB,CAKnB;;AACA,YAAKF,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACL,K;;;;;;;wCAtEmB;AAAA,UACRa,MADQ,GACG,KAAKC,KAAL,CAAWC,KADd,CACRF,MADQ,EAEhB;;AACA,UAAMG,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqBL,MAAM,CAACM,OAA5B,CAAxB;;AACA,UAAGH,eAAH,EAAoB;AACb,aAAKX,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEoB,IAAI,CAACC,KAAL,CAAWL,eAAX;AAAT,SAAd;AACN;;AACD,WAAKM,GAAL,GAAW1B,IAAI,CAAC2B,SAAL,WAAkBV,MAAM,CAACM,OAAzB,cAA2C;AAClDK,QAAAA,OAAO,EAAE,IADyC;AAElD1B,QAAAA,KAAK,EAAE;AAF2C,OAA3C,CAAX;AAIH;;;yCACmB;AAChB2B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5B,KAAL,CAAWE,KAAvB;AACAiB,MAAAA,YAAY,CAACU,OAAb,CACI,KAAKb,KAAL,CAAWC,KAAX,CAAiBF,MAAjB,CAAwBM,OAD5B,EAEIC,IAAI,CAACQ,SAAL,CAAe,KAAK9B,KAAL,CAAWE,KAA1B,CAFJ;AAIH;;;2CACsB;AACnBJ,MAAAA,IAAI,CAACiC,aAAL,CAAmB,KAAKP,GAAxB;AACH;;;6BAkDQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEQ,MAAM,CAACC,IAAP,CAAY,KAAKjC,KAAL,CAAWC,MAAvB,EAA+BiC,GAA/B,CAAmC,UAAAzB,GAAG;AAAA,eACnC,oBAAC,IAAD;AACI,UAAA,GAAG,EAAEA,GADT;AAEI,UAAA,KAAK,EAAEA,GAFX;AAGI,UAAA,OAAO,EAAE,MAAI,CAACT,KAAL,CAAWC,MAAX,CAAkBQ,GAAlB,CAHb;AAII,UAAA,UAAU,EAAE,MAAI,CAACI,UAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmC;AAAA,OAAtC,CADF,CAFJ,CADH,EAaO,oBAAC,KAAD;AACC,QAAA,MAAM,EAAE,KAAKb,KAAL,CAAWC,MADpB;AAEC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFnB;AAGC,QAAA,eAAe,EAAE,KAAKY,eAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbP,EAiBM,oBAAC,SAAD;AACE,QAAA,OAAO,EAAE,KAAKX,OADhB;AAEE,QAAA,UAAU,EAAE,KAAKK,UAFnB;AAGE,QAAA,UAAU,EAAI,KAAKG,UAHrB;AAIE,QAAA,gBAAgB,EAAI,KAAKC,gBAJ3B;AAKE,QAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWC,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBN,CADJ;AA4BH;;;;EAzGaT,KAAK,CAAC2C,S;;AA6GxB,eAAepC,GAAf","sourcesContent":["import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\"\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        //fisreinstate our local storage\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        if(localStorageRef) {\r\n               this.setState({ order: JSON.parse(localStorageRef) })\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(this.state.order)\r\n        localStorage.setItem(\r\n            this.props.match.params.storeId, \r\n            JSON.stringify(this.state.order)\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n    addFish = fish => {\r\n        //1. Take a copy of existing state\r\n        const fishes = {...this.state.fishes};\r\n        //2. Add our new fish to that fishes variable\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        //3. Set the new fishes object to state\r\n        this.setState({\r\n            fishes: fishes\r\n        })\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //1. take copy of current state\r\n        const fishes = { ...this.state.fishes };\r\n        //2/update stage\r\n        fishes[key] = updatedFish;\r\n        //3. set that to state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    deleteFish = key => {\r\n        //1.Take a copy of state\r\n        const fishes = {...this.state.fishes};\r\n        //2.Update the state\r\n        fishes[key] = null;\r\n        //3.update the state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes:sampleFishes})\r\n    };\r\n\r\n    addToOrder = key => {\r\n        //1. take copy of state\r\n        const order ={ ...this.state.order };\r\n        //2. either add to order or update the number in our order\r\n        order[key] = order[key] + 1 || 1;\r\n        //3.. call setstate to update our state object\r\n        this.setState({ order: order });\r\n    }\r\n    removeFromOrder = key => {\r\n          //1. take copy of state\r\n          const order ={ ...this.state.order };\r\n          //2. remove that item from our order\r\n          delete order[key];\r\n          //3.. call setstate to update our state object\r\n          this.setState({ order: order });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n               <div className=\"menu\">\r\n                   <Header  />\r\n                   <ul className=\"fishes\">\r\n                    {Object.keys(this.state.fishes).map(key => (\r\n                        <Fish \r\n                            key={key} \r\n                            index={key}\r\n                            details={this.state.fishes[key]} \r\n                            addToOrder={this.addToOrder}/>\r\n                        ))}\r\n                   </ul>\r\n                </div>\r\n                   <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order}\r\n                    removeFromOrder={this.removeFromOrder} />\r\n                  <Inventory \r\n                    addFish={this.addFish} \r\n                    updateFish={this.updateFish}\r\n                    deleteFish = {this.deleteFish}\r\n                    loadSampleFishes = {this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    />        \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}