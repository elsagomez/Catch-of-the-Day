{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dinas\\\\OneDrive\\\\Documents\\\\Elsa\\\\Coding\\\\REACT\\\\Catch-of-the-Day\\\\src\\\\components\\\\Inventory.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from 'firebase';\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler = function _callee(authData) {\n      var store;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId, {\n                context: _assertThisInitialized(_this)\n              }));\n\n            case 2:\n              store = _context.sent;\n              console.log(store); //2. Claim if there is no owner\n\n              if (store.owner) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                data: authData.user.uid\n              }));\n\n            case 7:\n              //3. Set the state of the inventory component to reflect the current user\n              _this.setState({\n                uid: authData.user.uid,\n                owner: store.owner || authData.user.uid\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Logging out!\");\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n            case 3:\n              _this.setState({\n                uid: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user: user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var logout = React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Logout\"); //Check if they are logged in\n\n      if (!this.state.uid) {\n        return React.createElement(Login, {\n          authenticate: this.authenticate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      } //Check if they are not the owner of the store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Sorry you are not the owner of this store\"), logout);\n      } // They must be the owner, just render the inventory\n\n\n      return React.createElement(\"div\", {\n        className: \"inventory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(function (key) {\n        return React.createElement(EditFishForm, {\n          key: key,\n          index: key,\n          fish: _this3.props.fishes[key],\n          updateFish: _this3.props.updateFish,\n          deleteFish: _this3.props.deleteFish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }), React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["C:/Users/dinas/OneDrive/Documents/Elsa/Coding/REACT/Catch-of-the-Day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","console","log","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from 'firebase';\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid : null,\r\n        owner : null\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        // 1.Lookup the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        console.log(store);\r\n        //2. Claim if there is no owner\r\n        if(!store.owner) {\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            });\r\n        }\r\n        //3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n    };\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log(\"Logging out!\");\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null});\r\n    }\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Logout</button>\r\n        //Check if they are logged in\r\n        if(!this.state.uid)\r\n        {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n        //Check if they are not the owner of the store\r\n        if(this.state.uid !== this.state.owner) {\r\n            return <div>\r\n                <p>Sorry you are not the owner of this store</p>\r\n                {logout}\r\n            </div>\r\n        }\r\n\r\n        // They must be the owner, just render the inventory\r\n        return (\r\n         <div className=\"inventory\">\r\n            <h2>Inventory</h2>\r\n            {logout}\r\n            {Object.keys(this.props.fishes).map(key => (\r\n            <EditFishForm \r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n            />\r\n            ))}\r\n            <AddFishForm addFish={this.props.addFish} />\r\n            <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n        </div>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}