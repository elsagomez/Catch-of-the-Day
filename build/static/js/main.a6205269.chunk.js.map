{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","className","this","props","tagline","React","Component","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","StorePicker","myInput","goToStore","storeName","history","push","required","defaultValue","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.a6205269.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends React.Component {\r\n    static propTypes = {\r\n        tagline: PropTypes.string.isRequired\r\n    };\r\n    render() {\r\n        return (\r\n            <header className=\"top\">\r\n                <h1>Catch\r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">Of</span>\r\n                    <span className=\"the\">The</span>\r\n                </span>\r\n                Day</h1>\r\n                <h3 className = \"tagline\">\r\n                <span>{this.props.tagline}</span>\r\n            </h3>\r\n            </header>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// Header.propTypes = {\r\n//     tagline: PropTypes.string.isRequired\r\n// };\r\nexport default Header;","export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    };\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === \"available\";\r\n        //make sure the fish is loaded before we continue!\r\n        if(!fish) return null;\r\n        if(!isAvailable) {\r\n            \r\n           return (\r\n           <CSSTransition classNames=\"order\" key={key} timeout={{ enter:500, exit:500}}>\r\n           <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available </li>;\r\n           </CSSTransition>\r\n           );\r\n        };\r\n        return (\r\n            <CSSTransition classNames=\"order\" key={key} timeout={{ enter:500, exit:500}}>\r\n                <li key={key}>\r\n                    <span>\r\n                    <TransitionGroup component=\"span\" className=\"count\">\r\n                        <CSSTransition \r\n                            classNames=\"count\" \r\n                            key={count} \r\n                            timeout={{enter:5000, exit:500}}>\r\n                                <span>{count}</span>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                    lbs {fish.name}\r\n                    {formatPrice(count*fish.price)}\r\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n                    </span>\r\n                 </li>\r\n        </CSSTransition>\r\n        );\r\n    };\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish =  this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        },0);\r\n\r\n\r\n        \r\n        return (\r\n         <div className=\"order-wrap\">\r\n            <h2>Order</h2>\r\n            <TransitionGroup component=\"ul\" className=\"order\">\r\n                 {orderIds.map(this.renderOrder)}\r\n            </TransitionGroup>\r\n            <div className=\"total\">\r\n                Total:\r\n                <strong>{formatPrice(total)}</strong>\r\n            </div>\r\n            \r\n         </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n    \r\n    static propTypes =  {\r\n        addFish: PropTypes.func\r\n    };\r\n    createFish = (event) => {\r\n        //1.Stop form from submitiing\r\n        event.preventDefault();\r\n        const fish = {\r\n            name : this.nameRef.current.value,\r\n            price : parseFloat(this.priceRef.current.value),\r\n            status : this.statusRef.current.value,\r\n            desc : this.descRef.current.value,\r\n            image : this.imageRef.current.value,\r\n        }\r\n        this.props.addFish(fish);\r\n        //refresh form\r\n        event.currentTarget.reset();\r\n    };\r\n    render() {\r\n        return (\r\n       <form className =\"fish-edit\" onSubmit = {this.createFish}>\r\n        <input name=\"name\" ref = {this.nameRef} type = \"text\" placeholder = \"Name\" />\r\n        <input name=\"price\" ref = {this.priceRef} type = \"text\" placeholder = \"Price\" />\r\n        <select name=\"status\" ref = {this.statusRef}>\r\n            <option value=\"available\">Fresh</option>\r\n            <option value=\"unavailable\">Sold Out</option>\r\n        </select> \r\n        <textarea name=\"desc\" ref = {this.descRef} placeholder = \"Desc\" />\r\n        <input name=\"image\" ref = {this.imageRef} type = \"text\" placeholder = \"Image\" />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n       </form>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    };\r\n    handleChange = (event) => {\r\n           //1. take a copy of the current fish\r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish)\r\n\r\n    }\r\n    render() {\r\n        return <div className=\"fish-edit\">\r\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n            <input type=\"text\" name=\"price\" onChange={this.handleChange}  value={this.props.fish.price } />\r\n            <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status } >\r\n                <option value=\"available\">Fresh</option>\r\n                <option value=\"unavailable\">Sold Out</option>\r\n            </select>\r\n            <textarea name=\"desc\"  onChange={this.handleChange} value={this.props.fish.desc }></textarea>\r\n            <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n            <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default EditFishForm;\r\n\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p> Sign in to manage your store's inventory </p>\r\n        <button \r\n        className=\"github\" \r\n        onClick={() => props.authenticate('Github')}>\r\n        Login with Github\r\n        </button>\r\n        <button \r\n        className=\"twitter\" \r\n        onClick={() => props.authenticate('Twitter')}>\r\n        Login with Twitter\r\n        </button>\r\n        <button \r\n        className=\"facebook\" \r\n        onClick={() => props.authenticate('Facebook')}>\r\n        Login with Facebook\r\n        </button>\r\n\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    \r\n    apiKey: \"AIzaSyDMWwv3xnZiChiEyKP-r3jqXETLjwT6-ZM\",\r\n    authDomain: \"catch-of-the-day-elsa-3e34e.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-elsa-3e34e.firebaseio.com\",\r\n  \r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n//this is a named export\r\nexport { firebaseApp };\r\n//this is a default export\r\nexport default base;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from 'firebase';\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid : null,\r\n        owner : null\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        // 1.Lookup the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        console.log(store);\r\n        //2. Claim if there is no owner\r\n        if(!store.owner) {\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            });\r\n        }\r\n        //3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n    };\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log(\"Logging out!\");\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null});\r\n    }\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Logout</button>\r\n        //Check if they are logged in\r\n        if(!this.state.uid)\r\n        {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n        //Check if they are not the owner of the store\r\n        if(this.state.uid !== this.state.owner) {\r\n            return <div>\r\n                <p>Sorry you are not the owner of this store</p>\r\n                {logout}\r\n            </div>\r\n        }\r\n\r\n        // They must be the owner, just render the inventory\r\n        return (\r\n         <div className=\"inventory\">\r\n            <h2>Inventory</h2>\r\n            {logout}\r\n            {Object.keys(this.props.fishes).map(key => (\r\n            <EditFishForm \r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n            />\r\n            ))}\r\n            <AddFishForm addFish={this.props.addFish} />\r\n            <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n        </div>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n        static propTypes = {\r\n            details: PropTypes.shape({\r\n                image: PropTypes.string,\r\n                name: PropTypes.string,\r\n                desc: PropTypes.string,\r\n                status: PropTypes.string,\r\n                price: PropTypes.number\r\n            }),\r\n            addToOrder: PropTypes.func\r\n        };\r\n        render() {\r\n        const { image, name, desc, price, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">{name}\r\n                <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p className=\"description\">{desc}</p>\r\n                <button \r\n                    disabled={!isAvailable} \r\n                    onClick={() => this.props.addToOrder(this.props.index)}\r\n                >\r\n                    {isAvailable ? \"Add To Order\" : \"Sold Out\"}</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\"\r\nimport base from '../base';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    };\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        //fisreinstate our local storage\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        if(localStorageRef) {\r\n               this.setState({ order: JSON.parse(localStorageRef) })\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(this.state.order)\r\n        localStorage.setItem(\r\n            this.props.match.params.storeId, \r\n            JSON.stringify(this.state.order)\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n    addFish = fish => {\r\n        //1. Take a copy of existing state\r\n        const fishes = {...this.state.fishes};\r\n        //2. Add our new fish to that fishes variable\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        //3. Set the new fishes object to state\r\n        this.setState({\r\n            fishes: fishes\r\n        })\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //1. take copy of current state\r\n        const fishes = { ...this.state.fishes };\r\n        //2/update stage\r\n        fishes[key] = updatedFish;\r\n        //3. set that to state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    deleteFish = key => {\r\n        //1.Take a copy of state\r\n        const fishes = {...this.state.fishes};\r\n        //2.Update the state\r\n        fishes[key] = null;\r\n        //3.update the state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes:sampleFishes})\r\n    };\r\n\r\n    addToOrder = key => {\r\n        //1. take copy of state\r\n        const order ={ ...this.state.order };\r\n        //2. either add to order or update the number in our order\r\n        order[key] = order[key] + 1 || 1;\r\n        //3.. call setstate to update our state object\r\n        this.setState({ order: order });\r\n    }\r\n    removeFromOrder = key => {\r\n          //1. take copy of state\r\n          const order ={ ...this.state.order };\r\n          //2. remove that item from our order\r\n          delete order[key];\r\n          //3.. call setstate to update our state object\r\n          this.setState({ order: order });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n               <div className=\"menu\">\r\n                   <Header tagline=\"Fresh Seafood Market\" />\r\n                   <ul className=\"fishes\">\r\n                    {Object.keys(this.state.fishes).map(key => (\r\n                        <Fish \r\n                            key={key} \r\n                            index={key}\r\n                            details={this.state.fishes[key]} \r\n                            addToOrder={this.addToOrder}/>\r\n                        ))}\r\n                   </ul>\r\n                </div>\r\n                   <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order}\r\n                    removeFromOrder={this.removeFromOrder} />\r\n                  <Inventory \r\n                    addFish={this.addFish} \r\n                    updateFish={this.updateFish}\r\n                    deleteFish = {this.deleteFish}\r\n                    loadSampleFishes = {this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    storeId={this.props.match.params.storeId}\r\n                    />        \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    };\r\n    myInput = React.createRef();\r\n\r\n    goToStore = (event) => {\r\n        //1. Stop form from submitting\r\n        event.preventDefault();\r\n        //2. get the text from input\r\n        const storeName = this.myInput.current.value;\r\n        //3. change the page to /store/whatevertheyenter\r\n        this.props.history.push(`/store/${storeName}`)\r\n\r\n    }\r\n\r\nrender() {\r\n\r\n    return (\r\n    <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h1>Store Picker</h1>\r\n        <h3>Please Enter a Store</h3>\r\n        <input \r\n            type=\"text\" \r\n            ref={this.myInput} \r\n            required placeholder=\"Store Name\" \r\n            defaultValue ={getFunName()} />\r\n        <button type=\"submit\">Visit Store</button>\r\n    </form>\r\n    \r\n    ) \r\n}\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Foud!!</h2>\r\n    </div>\r\n)\r\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component = {StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\nexport default Router;","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './components/App';\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}